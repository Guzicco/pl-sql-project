-- Generated by Oracle SQL Developer Data Modeler 18.4.0.339.1532
--   at:        2019-06-28 22:05:47 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g
--   AUTHOR:    MICHAL ZAWILSKI


CREATE TABLE faktury (
    rok            INTEGER NOT NULL,
    miesiac        INTEGER NOT NULL,
    klient_id      INTEGER NOT NULL,
    naleznosc      NUMBER(8, 2),
    czy_oplacona   CHAR(1) NOT NULL
);

COMMENT ON TABLE faktury IS
    'tabela  wystawionych faktur';

ALTER TABLE faktury
    ADD CONSTRAINT faktury_pk PRIMARY KEY ( rok,
                                            miesiac,
                                            klient_id );

CREATE TABLE internet (
    id               INTEGER NOT NULL,
    nazwa            VARCHAR2(20) NOT NULL,
    predkosc_lacza   INTEGER NOT NULL,
    cena             NUMBER(6, 2)
);

COMMENT ON TABLE internet IS
    'oferta internetu';

ALTER TABLE internet ADD CONSTRAINT internet_pk PRIMARY KEY ( id );

CREATE TABLE kanaly_tv (
    id             INTEGER NOT NULL,
    nazwa          VARCHAR2(30) NOT NULL,
    pakiet_tv_id   INTEGER NOT NULL
);

COMMENT ON TABLE kanaly_tv IS
    'lista kanalow tv';

ALTER TABLE kanaly_tv ADD CONSTRAINT kanaly_tv_pk PRIMARY KEY ( id );

ALTER TABLE kanaly_tv ADD CONSTRAINT kanaly_tv__un UNIQUE ( nazwa );

CREATE TABLE klient (
    id                  INTEGER NOT NULL,
    nazwisko            VARCHAR2(20) NOT NULL,
    imie                VARCHAR2(20) NOT NULL,
    pesel               NUMBER(11) NOT NULL,
    miejscowosc         VARCHAR2(20) NOT NULL,
    ulica               VARCHAR2(20) NOT NULL,
    numer_domu          INTEGER NOT NULL,
    numer_mieszkania    INTEGER,
    telefon_komorkowy   NUMBER(9),
    uslugi_id           INTEGER NOT NULL
);

COMMENT ON TABLE klient IS
    'lista klientow';

ALTER TABLE klient ADD CONSTRAINT klient_pk PRIMARY KEY ( id );

ALTER TABLE klient ADD CONSTRAINT klient__un UNIQUE ( pesel );

CREATE TABLE konto (
    id        INTEGER NOT NULL,
    login     VARCHAR2(50),
    haslo     VARCHAR2(100) NOT NULL,
    rola_id   INTEGER NOT NULL
);

COMMENT ON TABLE konto IS
    'konto do apex';

ALTER TABLE konto ADD CONSTRAINT konto_pk PRIMARY KEY ( id );

ALTER TABLE konto ADD CONSTRAINT konto__un UNIQUE ( login );

CREATE TABLE pakiet_kanalow (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(10) NOT NULL
);

COMMENT ON TABLE pakiet_kanalow IS
    'lista pakietow tv';

ALTER TABLE pakiet_kanalow ADD CONSTRAINT pakiet_tv_pk PRIMARY KEY ( id );

CREATE TABLE platnosci (
    faktury_klient_id   INTEGER NOT NULL,
    faktury_rok         INTEGER NOT NULL,
    faktury_miesiac     INTEGER NOT NULL,
    numer_wplaty        INTEGER NOT NULL,
    kwota_wplacona      NUMBER(8, 2)
);

COMMENT ON TABLE platnosci IS
    'lista platnosci klientow';

ALTER TABLE platnosci ADD CONSTRAINT platnosci_pk PRIMARY KEY ( faktury_klient_id,
                                                                numer_wplaty );

CREATE TABLE pracownicy (
    id              INTEGER NOT NULL,
    nazwisko        VARCHAR2(20),
    imie            VARCHAR2(20),
    pesel           NUMBER(11) NOT NULL,
    telefon         INTEGER,
    stanowisko_id   INTEGER NOT NULL
);

COMMENT ON TABLE pracownicy IS
    'lista pracownikow';

ALTER TABLE pracownicy ADD CONSTRAINT pracownicy_pk PRIMARY KEY ( id );

ALTER TABLE pracownicy ADD CONSTRAINT pracownicy__un UNIQUE ( pesel );

CREATE TABLE rola (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(50)
);

COMMENT ON TABLE rola IS
    'rola w apex';

ALTER TABLE rola ADD CONSTRAINT rola_pk PRIMARY KEY ( id );

ALTER TABLE rola ADD CONSTRAINT rola__un UNIQUE ( nazwa );

CREATE TABLE routery (
    id              INTEGER
        CONSTRAINT nnc_routery_id NOT NULL,
    marka           VARCHAR2(20),
    model           VARCHAR2(20),
    numer_seryjny   VARCHAR2(20),
    adres_mac       VARCHAR2(12),
    ip              VARCHAR2(15),
    klient_id       INTEGER
        CONSTRAINT nnc_routery_klient NOT NULL,
    routing         INTEGER
);

COMMENT ON TABLE routery IS
    'lista routerow';

ALTER TABLE routery ADD CONSTRAINT routery_pk PRIMARY KEY ( id );

ALTER TABLE routery
    ADD CONSTRAINT routery__un UNIQUE ( adres_mac,
                                        numer_seryjny,
                                        ip );

CREATE TABLE stanowisko (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(20)
);

COMMENT ON TABLE stanowisko IS
    'lista stanowisk';

ALTER TABLE stanowisko ADD CONSTRAINT stanowisko_pk PRIMARY KEY ( id );

CREATE TABLE telewizja (
    id           INTEGER NOT NULL,
    nazwa        VARCHAR2(30) NOT NULL,
    cena         NUMBER(6, 2) NOT NULL,
    podstawowy   CHAR(1) DEFAULT 'T' NOT NULL,
    sportowy     CHAR(1) DEFAULT 'F' NOT NULL,
    filmowy      CHAR(1) DEFAULT 'F' NOT NULL,
    naukowy      CHAR(1) DEFAULT 'F' NOT NULL,
    kanaly_4k    CHAR(1) DEFAULT 'F' NOT NULL
);

COMMENT ON TABLE telewizja IS
    'oferta pakietow tv';

ALTER TABLE telewizja ADD CONSTRAINT telewizja_pk PRIMARY KEY ( id );

CREATE TABLE tickets (
    id                INTEGER NOT NULL,
    typ_zgloszenia    INTEGER NOT NULL,
    data_zgloszenia   DATE NOT NULL,
    opis              VARCHAR2(200),
    zglaszajacy       INTEGER NOT NULL,
    pracownik         INTEGER NOT NULL,
    zakonczone        CHAR(1) DEFAULT 'F' NOT NULL
);

COMMENT ON TABLE tickets IS
    'lista zgloszen';

ALTER TABLE tickets ADD CONSTRAINT tickets_pk PRIMARY KEY ( id );

CREATE TABLE typ_zgloszenia (
    id          INTEGER NOT NULL,
    typ         VARCHAR2(20),
    priorytet   INTEGER
);

COMMENT ON TABLE typ_zgloszenia IS
    'typy zgloszen';

ALTER TABLE typ_zgloszenia ADD CONSTRAINT typ_awarii_pk PRIMARY KEY ( id );

CREATE TABLE uslugi (
    id             INTEGER NOT NULL,
    internet_id    INTEGER NOT NULL,
    telewizja_id   INTEGER NOT NULL,
    kwota_uslugi   NUMBER(6, 2)
);

COMMENT ON TABLE uslugi IS
    'lista uslug';

ALTER TABLE uslugi ADD CONSTRAINT uslugi_pk PRIMARY KEY ( id );

ALTER TABLE faktury
    ADD CONSTRAINT faktury_klient_fk FOREIGN KEY ( klient_id )
        REFERENCES klient ( id );

ALTER TABLE kanaly_tv
    ADD CONSTRAINT kanaly_tv_pakiet_tv_fk FOREIGN KEY ( pakiet_tv_id )
        REFERENCES pakiet_kanalow ( id );

ALTER TABLE klient
    ADD CONSTRAINT klient_uslugi_fk FOREIGN KEY ( uslugi_id )
        REFERENCES uslugi ( id );

ALTER TABLE konto
    ADD CONSTRAINT konto_rola_fk FOREIGN KEY ( rola_id )
        REFERENCES rola ( id );

ALTER TABLE platnosci
    ADD CONSTRAINT platnosci_faktury_fk FOREIGN KEY ( faktury_rok,
                                                      faktury_miesiac,
                                                      faktury_klient_id )
        REFERENCES faktury ( rok,
                             miesiac,
                             klient_id );

ALTER TABLE pracownicy
    ADD CONSTRAINT pracownicy_stanowisko_fk FOREIGN KEY ( stanowisko_id )
        REFERENCES stanowisko ( id );

ALTER TABLE routery
    ADD CONSTRAINT routery_klient_fk FOREIGN KEY ( klient_id )
        REFERENCES klient ( id );

ALTER TABLE routery
    ADD CONSTRAINT routery_routery_fk FOREIGN KEY ( routing )
        REFERENCES routery ( id );

ALTER TABLE tickets
    ADD CONSTRAINT tickets_klient_fk FOREIGN KEY ( zglaszajacy )
        REFERENCES klient ( id );

ALTER TABLE tickets
    ADD CONSTRAINT tickets_pracownicy_fk FOREIGN KEY ( pracownik )
        REFERENCES pracownicy ( id );

ALTER TABLE tickets
    ADD CONSTRAINT tickets_typ_awarii_fk FOREIGN KEY ( typ_zgloszenia )
        REFERENCES typ_zgloszenia ( id );

ALTER TABLE uslugi
    ADD CONSTRAINT uslugi_internet_fk FOREIGN KEY ( internet_id )
        REFERENCES internet ( id );

ALTER TABLE uslugi
    ADD CONSTRAINT uslugi_telewizja_fk FOREIGN KEY ( telewizja_id )
        REFERENCES telewizja ( id );

CREATE SEQUENCE internet_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER internet_id_trg BEFORE
    INSERT ON internet
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := internet_id_seq.nextval;
END;
/

CREATE SEQUENCE kanaly_tv_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER kanaly_tv_id_trg BEFORE
    INSERT ON kanaly_tv
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := kanaly_tv_id_seq.nextval;
END;
/

CREATE SEQUENCE klient_id_seq START WITH 100 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER klient_id_trg BEFORE
    INSERT ON klient
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := klient_id_seq.nextval;
END;
/

CREATE SEQUENCE konto_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER konto_id_trg BEFORE
    INSERT ON konto
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := konto_id_seq.nextval;
END;
/

CREATE SEQUENCE pakiet_kanalow_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER pakiet_kanalow_id_trg BEFORE
    INSERT ON pakiet_kanalow
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := pakiet_kanalow_id_seq.nextval;
END;
/

CREATE SEQUENCE platnosci_numer_wplaty_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER platnosci_numer_wplaty_trg BEFORE
    INSERT ON platnosci
    FOR EACH ROW
    WHEN ( new.numer_wplaty IS NULL )
BEGIN
    :new.numer_wplaty := platnosci_numer_wplaty_seq.nextval;
END;
/

CREATE SEQUENCE pracownicy_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER pracownicy_id_trg BEFORE
    INSERT ON pracownicy
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := pracownicy_id_seq.nextval;
END;
/

CREATE SEQUENCE rola_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER rola_id_trg BEFORE
    INSERT ON rola
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := rola_id_seq.nextval;
END;
/

CREATE SEQUENCE routery_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER routery_id_trg BEFORE
    INSERT ON routery
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := routery_id_seq.nextval;
END;
/

CREATE SEQUENCE stanowisko_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER stanowisko_id_trg BEFORE
    INSERT ON stanowisko
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := stanowisko_id_seq.nextval;
END;
/

CREATE SEQUENCE telewizja_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER telewizja_id_trg BEFORE
    INSERT ON telewizja
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := telewizja_id_seq.nextval;
END;
/

CREATE SEQUENCE tickets_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER tickets_id_trg BEFORE
    INSERT ON tickets
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := tickets_id_seq.nextval;
END;
/

CREATE SEQUENCE typ_zgloszenia_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER typ_zgloszenia_id_trg BEFORE
    INSERT ON typ_zgloszenia
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := typ_zgloszenia_id_seq.nextval;
END;
/

CREATE SEQUENCE uslugi_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER uslugi_id_trg BEFORE
    INSERT ON uslugi
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := uslugi_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            15
-- CREATE INDEX                             0
-- ALTER TABLE                             34
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          14
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         14
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
